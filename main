package linkchecker;
import java.util.Scanner;
import java.lang.*;
import java.net.URL;
//Started on October 1st, 2019.
public class LinkChecker {

    /* Returns true if url is valid */
    public static boolean isValid(String url) 
    { 
        /* Try creating a valid URL */
        try { 
            new URL(url).toURI(); 
            return true; 
        } 
          
        // If there was an Exception 
        // while creating URL object 
        catch (Exception e) { 
            return false; 
        } 
    }
    
    static void permute(String input) 
    { 
        int n = input.length(); 
          
        // Number of permutations is 2^n 
        int max = 1 << n; 
          
        // Converting string to lower case 
        input = input.toLowerCase(); 
          
        // Using all subsequences and permuting them 
        for(int i = 0;i < max; i++) 
        { 
            char combination[] = input.toCharArray(); 
              
            // If j-th bit is set, we convert it to upper case 
            for(int j = 0; j < n; j++) 
            { 
                if(((i >> j) &  1) == 1) 
                    combination[j] = (char) (combination[j]-32); 
            } 
              
            // Printing current combination 
            System.out.println(combination); 
            //System.out.print("   "); 
        } 
    } 
    

    public static void main(String[] args) {
        permute("computer");
        String url1 = ""; //Should pull from a list of all possible links then paste it in the link tester
        if (isValid(url1))  
            System.out.println("Yes"); 
        else
            System.out.println("No");
    }
    
}
